<beans xmlns="http://www.springframework.org/schema/beans"  
 xmlns:context="http://www.springframework.org/schema/context"  
 xmlns:p="http://www.springframework.org/schema/p"  
 xmlns:mvc="http://www.springframework.org/schema/mvc"  
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
 xmlns:task="http://www.springframework.org/schema/task"
 xsi:schemaLocation="http://www.springframework.org/schema/beans  
      http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
      http://www.springframework.org/schema/context  
      http://www.springframework.org/schema/context/spring-context.xsd  
      http://www.springframework.org/schema/mvc  
      http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
      http://www.springframework.org/schema/task 
      http://www.springframework.org/schema/task/spring-task-3.2.xsd">  
      
     <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射-->  
     <mvc:annotation-driven />  
     
     <!-- 配置静态访问 -->
      <mvc:resources mapping="/*" location="/*" />
     
     <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean -->  
     <!-- <context:component-scan base-package="cn.yi.gather.v11">
     	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
     </context:component-scan> -->
     <context:component-scan base-package="cn.yi.gather.v20">
     	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
     </context:component-scan> 
      <context:component-scan base-package="cn.yi.gather.v22.yg100">
     	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
   		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
     </context:component-scan> 
     
     
     <!-- 对模型视图名称的解析，在请求时模型视图名称添加前后缀 -->  
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
     	p:prefix="/WEB-INF/v2view/" p:suffix=".jsp" />  
     	
     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
	p:maxUploadSize="1073741824" p:maxInMemorySize="1024" />
	
	<!-- 拦截器 -->  
   <mvc:interceptors>
   		<!-- <mvc:interceptor>
			<mvc:mapping path="/**"/>    	拦截所有请求
	    	<bean class="cn.yi.gather.v11.application.SessionOverTimeInterceptor">
	    		<property name="allowURL">
	    			<list>
	    				<value>index</value>
	    				<value>login</value>
	    				<value>index.jsp</value>
	    				<value>kaptcha.jpg</value>
	    				<value>index_background.jpg</value>
	    				<value>index_loginbox.png</value>
	    				<value>index_line.png</value>
	    			</list>
	    		</property>
	    	</bean>
    	</mvc:interceptor> -->
    	<mvc:interceptor>
			<mvc:mapping path="/**"/>    	<!-- 拦截所有请求 -->
	    	<bean class="cn.yi.gather.v20.application.LogInterceptor">
	    	</bean>  
    	</mvc:interceptor>
    </mvc:interceptors>
    <task:scheduler id="scheduler" pool-size="10" />  
    <task:executor id="executor" keep-alive="3600" pool-size="100-200" 
    queue-capacity="500" rejection-policy="CALLER_RUNS" /> 
    <task:annotation-driven executor="executor" scheduler="scheduler" />
</beans>  